(** Types and functions for running unit tests. *)

type output = {
  log: string list;             (** The logging produced while running the
                                    tests. *)
  outcomes: Suite.outcome list; (** The results of running the test. *)
}
(** The output generated by running a test. *)

type raw_summary = {
  total: int;
  errors: int;
  failures: int;
  passes: int;
  passed: bool
}
(** Raw summary of test run with the total number of tests, and
    failed/passed tests. *)

type summary = {
  report: string;             (** A report summarising the test results. *)
  passed: bool;               (** A flag indicating whether all the tests
                                  passed. *)
}
(** A summary of a test run: short description of results plus a flag indicating whether
    all the tests passed. *)

val run : Suite.t -> (output -> unit) -> unit
(** [run suite callback] runs [suite], passes the output to [callback]. *)

val summarise_raw : Suite.outcome list -> raw_summary
(** [summarise outcomes] converts a list of test outcome into a summary. *)

val summarise : Suite.outcome list -> summary
(** [summarise outcomes] converts a list of test outcome into a summary. *)
